{
  "swagger": "2.0",
  "info": {
    "title": "API para el sistema de inventario de AMARA SAS",
    "description": "Esta API permite gestionar todo el sistema de invitenario de la produccion de quesos de la empresa AMARA SAS",
    "version": "1.0.0"
  },
  "host": "amara-backend-production-2ae0.up.railway.app/",
  "basePath": "/",
  "schemes": ["https"],
  "paths": {
    "/api/login": {
      "post": {
        "tags": ["Login"],
        "description": "Autentica a un usuario en el sistema proporcionando su nombre de usuario y contraseña. Si las credenciales son correctas, devuelve un token de autenticación para acceder a los demás recursos protegidos de la API.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "nombre_usuario": {
                  "type": "string",
                  "example": "usuario123"
                },
                "password": {
                  "type": "string",
                  "example": "contraseñaSegura"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Autenticación exitosa. Devuelve un token de acceso."
          },
          "400": {
            "description": "Solicitud incorrecta. Datos faltantes o en formato incorrecto."
          },
          "401": {
            "description": "No autorizado. Credenciales incorrectas."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    },
    "/api/verify": {
      "get": {
        "tags": ["Login"],
        "description": "Verifica la validez del token de autenticación enviado en el encabezado de la solicitud. Si el token es válido, el usuario puede continuar accediendo a los recursos protegidos. (aun no funcional)",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Token JWT de autenticación en formato 'Bearer <token>'"
          }
        ],
        "responses": {
          "200": {
            "description": "Token válido. El usuario puede acceder a los recursos protegidos."
          },
          "401": {
            "description": "No autorizado. Token ausente, inválido o expirado."
          },
          "403": {
            "description": "Prohibido. El usuario no tiene los permisos necesarios."
          }
        }
      }
    },
    "/api/perfil": {
      "get": {
        "tags": ["Login"],
        "description": "Obtiene la información del perfil del usuario autenticado. Requiere un token de autenticación válido. (aun no funcional)",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Token JWT de autenticación en formato 'Bearer <token>'"
          }
        ],
        "responses": {
          "200": {
            "description": "Perfil del usuario obtenido correctamente."
          },
          "401": {
            "description": "No autorizado. Token inválido o expirado."
          }
        }
      }
    },
    "/api/personas": {
      "get": {
        "tags": ["Personas"],
        "description": "Obtiene una lista de todas las personas registradas en el sistema.",
        "responses": {
          "200": {
            "description": "Lista de personas obtenida correctamente."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    },
    "/api/personas/{id}": {
      "get": {
        "tags": ["Personas"],
        "description": "Obtiene la información de una persona específica según su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID único de la persona a consultar."
          }
        ],
        "responses": {
          "200": {
            "description": "Información de la persona obtenida correctamente."
          },
          "404": {
            "description": "No encontrado. No existe una persona con ese ID."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      },
      "delete": {
        "tags": ["Personas"],
        "description": "Obtiene la información de una persona específica según su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID único para eliminar persona."
          }
        ],
        "responses": {
          "200": {
            "description": "Información de la persona obtenida correctamente."
          },
          "404": {
            "description": "No encontrado. No existe una persona con ese ID."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      },
      "put": {
        "tags": ["Personas"],
        "description": "Permite modificar la informacion de una persona, mediante su id, en el body solo envias la propiedad o las propiedades , con el valor que vas a modificar",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "direccion": {
                  "example": "nueva dirreccion"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/cliente": {
      "get": {
        "tags": ["Cliente"],
        "description": "Obtiene la informacion de los clientes",
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/cliente/create": {
      "post": {
        "tags": ["Cliente"],
        "description": "Registra un nuevo cliente en el sistema. Si el cliente es una empresa (tipo_persona = 'juridica'), los campos 'apellido' y 'edad' pueden ser nulos. \nSi es una persona (tipo_persona = 'natural')",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cedula_nit": {
                  "type": "string",
                  "example": "123456789",
                  "description": "Número de cédula o NIT del cliente."
                },
                "nombre": {
                  "type": "string",
                  "example": "Empresa XYZ",
                  "description": "Nombre del cliente o razón social si es una empresa."
                },
                "apellido": {
                  "type": "string",
                  "example": "Pérez",
                  "description": "Apellido del cliente. Puede ser nulo si es una empresa."
                },
                "celular": {
                  "type": "string",
                  "example": "3001234567",
                  "description": "Número de celular del cliente."
                },
                "tipo_persona": {
                  "type": "string",
                  "example": "juridica",
                  "description": "Tipo de persona: 'Natural' o 'Jurídica'."
                },
                "edad": {
                  "type": "integer",
                  "example": 30,
                  "description": "Edad del cliente. Puede ser nulo si es una empresa."
                },
                "direccion": {
                  "type": "string",
                  "example": "Calle 123",
                  "description": "Dirección del cliente."
                },
                "correo": {
                  "type": "string",
                  "example": "empresa@xyz.com",
                  "description": "Correo electrónico del cliente."
                },
                "tipo_relacion": {
                  "type": "string",
                  "example": "cliente",
                  "description": "Define si la persona es un 'cliente'."
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Cliente creado exitosamente."
          },
          "400": {
            "description": "Solicitud incorrecta. Datos inválidos o incompletos."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    },

    "/api/proveedor": {
      "get": {
        "tags": ["Proveedor"],
        "description": "Obtiene la informacion de los proveedores",
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/proveedor/create": {
      "post": {
        "tags": ["Proveedor"],
        "description": "Registra un nuevo proveedor en el sistema. Si el proveedor es una empresa (tipo_persona = 'juridica'), los campos 'apellido' y 'edad' pueden ser nulos. \nSi es una persona (tipo_persona = 'natural')",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cedula_nit": {
                  "type": "string",
                  "example": "123456789",
                  "description": "Número de cédula o NIT del cliente."
                },
                "nombre": {
                  "type": "string",
                  "example": "Empresa XYZ",
                  "description": "Nombre del cliente o razón social si es una empresa."
                },
                "apellido": {
                  "type": "string",
                  "example": "Pérez",
                  "description": "Apellido del cliente. Puede ser nulo si es una empresa."
                },
                "celular": {
                  "type": "string",
                  "example": "3001234567",
                  "description": "Número de celular del cliente."
                },
                "tipo_persona": {
                  "type": "string",
                  "example": "juridica",
                  "description": "Tipo de persona: 'Natural' o 'Jurídica'."
                },
                "edad": {
                  "type": "integer",
                  "example": 30,
                  "description": "Edad del cliente. Puede ser nulo si es una empresa."
                },
                "direccion": {
                  "type": "string",
                  "example": "Calle 123",
                  "description": "Dirección del cliente."
                },
                "correo": {
                  "type": "string",
                  "example": "empresa@xyz.com",
                  "description": "Correo electrónico del cliente."
                },
                "tipo_relacion": {
                  "type": "string",
                  "example": "proveedor",
                  "description": "Define si la persona es un 'proveedor'."
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Cliente creado exitosamente."
          },
          "400": {
            "description": "Solicitud incorrecta. Datos inválidos o incompletos."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    },
    "/api/materia-prima": {
      "get": {
        "tags": ["Materias Primas"],
        "description": "Obtiene una lista de todas las materias primas registradas en el sistema.",
        "responses": {
          "200": {
            "description": "Lista de materias primas obtenida correctamente."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    },
    "/api/materia-prima/nombres-id": {
      "get": {
        "tags": ["Materias Primas"],
        "description": "Obtiene una lista de materias primas con solo su ID y nombre.",
        "responses": {
          "200": {
            "description": "Lista de nombres de materias primas obtenida correctamente.",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id_materia": 3,
                    "nombre": "Leche"
                  },
                  {
                    "id_materia": 4,
                    "nombre": "Sal"
                  },
                  {
                    "id_materia": 5,
                    "nombre": "Cuajo"
                  },
                  {
                    "id_materia": 6,
                    "nombre": "Nitrato"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    },
    "/api/compra/create": {
      "post": {
        "tags": ["Compra"],
        "description": "Registra una nueva compra en el sistema, asociada a un proveedor. También permite agregar detalles de los productos adquiridos. las unidades de medida permitidas son 'kg', 'g', 'L', 'ml', 'unidad'",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cedula_proveedor": {
                  "type": "string",
                  "example": "123456789",
                  "description": "Cédula o NIT del proveedor asociado a la compra."
                },
                "metodo_pago": {
                  "type": "string",
                  "enum": ["efectivo", "tarjeta", "transferencia"],
                  "example": "transferencia",
                  "description": "Método de pago utilizado. Valores permitidos: 'efectivo', 'tarjeta', 'transferencia'."
                },
                "observaciones": {
                  "type": "string",
                  "example": "Compra de insumos para producción.",
                  "description": "Notas adicionales sobre la compra."
                },
                "detalles": {
                  "type": "array",
                  "description": "Lista de detalles de los productos adquiridos en la compra.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id_materia": {
                        "type": "integer",
                        "example": 1,
                        "description": "ID de la materia prima adquirida."
                      },
                      "cantidad": {
                        "type": "number",
                        "example": 10.5,
                        "description": "Cantidad de materia prima adquirida."
                      },
                      "precio_unitario": {
                        "type": "number",
                        "example": 5.75,
                        "description": "Precio unitario de la materia prima."
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Compra registrada exitosamente."
          },
          "400": {
            "description": "Solicitud incorrecta. Datos inválidos o incompletos."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    },
    "/api/queso/create": {
      "post": {
        "tags": ["Quesos"],
        "description": "Crea un nuevo registro de queso en la base de datos.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "nombre": {
                  "type": "string",
                  "example": "Queso Cheddar",
                  "description": "Nombre del queso."
                },
                "tipo": {
                  "type": "string",
                  "example": "Curado",
                  "description": "Tipo o clasificación del queso."
                },
                "cantidad_disponible": {
                  "type": "number",
                  "example": 50.0,
                  "description": "Cantidad disponible en inventario."
                },
                "ubicacion": {
                  "type": "string",
                  "example": "Almacén A",
                  "description": "Ubicación del queso en el almacén."
                },
                "precio": {
                  "type": "number",
                  "example": 30.0,
                  "description": "Precio por unidad en la moneda local."
                }
              },
              "required": ["nombre", "tipo", "cantidad_disponible", "precio"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Queso creado exitosamente."
          },
          "400": {
            "description": "Solicitud incorrecta. Verifique los datos enviados."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    },
    "/api/queso": {
      "get": {
        "tags": ["Quesos"],
        "description": "Obtiene la lista de todos los quesos registrados.",
        "responses": {
          "200": {
            "description": "Lista de quesos obtenida correctamente."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    },
    "/api/queso/{id}": {
      "delete": {
        "tags": ["Quesos"],
        "description": "elimina un queso deacuerdo a su id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/produccion/create": {
      "post": {
        "tags": ["Produccion"],
        "description": "Registra una nueva producción junto con los detalles de las materias primas utilizadas.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id_queso": {
                  "type": "integer",
                  "example": 1,
                  "description": "ID del tipo de queso producido."
                },
                "cantidad_producida": {
                  "type": "integer",
                  "example": 10,
                  "description": "Cantidad de quesos producidos."
                },
                "responsable": {
                  "type": "string",
                  "example": "Juan Pérez",
                  "description": "Nombre del responsable de la producción."
                },
                "estado": {
                  "type": "string",
                  "enum": ["en proceso", "finalizado", "cancelado"],
                  "example": "en proceso",
                  "description": "Estado actual de la producción."
                },
                "observaciones": {
                  "type": "string",
                  "example": "Producción en curso, buena calidad.",
                  "description": "Notas adicionales sobre la producción (opcional)."
                },
                "detalles": {
                  "type": "array",
                  "description": "Lista de materias primas utilizadas en la producción.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id_materia": {
                        "type": "integer",
                        "example": 5,
                        "description": "ID de la materia prima utilizada."
                      },
                      "cantidad_usada": {
                        "type": "number",
                        "format": "decimal",
                        "example": 2.5,
                        "description": "Cantidad de materia prima utilizada."
                      },
                      "unidad_medida": {
                        "type": "string",
                        "enum": ["kg", "g", "l", "ml", "unidad"],
                        "example": "kg",
                        "description": "Unidad de medida de la cantidad utilizada."
                      }
                    }
                  }
                }
              },
              "required": [
                "id_queso",
                "cantidad_producida",
                "responsable",
                "estado",
                "detalles"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Producción registrada exitosamente.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Producción registrada correctamente."
                },
                "id_produccion": {
                  "type": "integer",
                  "example": 123
                }
              }
            }
          },
          "400": {
            "description": "Error en la solicitud. Algún campo obligatorio está ausente o tiene un valor no permitido.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Estado inválido. Debe ser uno de: en proceso, finalizado, cancelado."
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Error del servidor."
                }
              }
            }
          }
        }
      }
    },
    "/api/produccion": {
      "get": {
        "tags": ["Produccion"],
        "description": "Devuelve la lista de todas las producciones registradas.",
        "responses": {
          "200": {
            "description": "Lista de producciones obtenida correctamente.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id_produccion": {
                    "type": "integer",
                    "example": 32
                  },
                  "nombre_queso": {
                    "type": "string",
                    "example": "Queso Mozzarella"
                  },
                  "fecha_produccion": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-03-31T17:11:38.810Z"
                  },
                  "cantidad_producida": {
                    "type": "integer",
                    "example": 10
                  },
                  "peso_total_kg": {
                    "type": "number",
                    "format": "decimal",
                    "example": 25.0
                  },
                  "responsable": {
                    "type": "string",
                    "example": "Juan Pérez"
                  },
                  "estado": {
                    "type": "string",
                    "example": "cancelado"
                  },
                  "observaciones": {
                    "type": "string",
                    "example": "Producción en curso, buena calidad."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error al obtener la producción."
                }
              }
            }
          }
        }
      }
    },
    "/api/produccion/{id}": {
      "delete": {
        "tags": ["Produccion"],
        "description": "elimina una produccion por ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID único para eliminar persona."
          }
        ],
        "responses": {
          "200": {
            "description": "Información de la persona obtenida correctamente."
          },
          "404": {
            "description": "No encontrado. No existe una produccion con ese ID."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    },
    "/api/venta": {
      "get": {
        "tags": ["Ventas"],
        "description": "Obtiene una lista de todas las ventas registradas en el sistema.",
        "responses": {
          "200": {
            "description": "Lista de ventas obtenida correctamente."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    },
    "/api/venta/create": {
      "post": {
        "tags": ["Ventas"],
        "description": "Registra una nueva venta en el sistema, asociada a un cliente. Permite especificar los detalles de los quesos vendidos con diferentes presentaciones.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cedula_cliente": {
                  "type": "string",
                  "example": "123456789",
                  "description": "Cédula o NIT del cliente asociado a la venta."
                },
                "detalles": {
                  "type": "array",
                  "description": "Lista de detalles de los quesos vendidos en la transacción.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id_queso": {
                        "type": "integer",
                        "example": 1,
                        "description": "ID del queso vendido."
                      },
                      "presentacion": {
                        "type": "string",
                        "enum": ["unidad", "canasta", "libra", "kilogramo"],
                        "example": "unidad",
                        "description": "Presentación en la que se vende el queso."
                      },
                      "cantidad": {
                        "type": "integer",
                        "example": 50,
                        "description": "Cantidad de quesos vendidos en la presentación especificada."
                      },
                      "precio_unitario": {
                        "type": "number",
                        "example": 30000,
                        "description": "Precio unitario del queso en la presentación especificada."
                      }
                    },
                    "required": [
                      "id_queso",
                      "presentacion",
                      "cantidad",
                      "precio_unitario"
                    ]
                  }
                }
              },
              "required": ["cedula_cliente", "detalles"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Venta registrada exitosamente.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Venta registrada correctamente."
                },
                "id_venta": {
                  "type": "integer",
                  "example": 123
                }
              }
            }
          },
          "400": {
            "description": "Solicitud incorrecta. Datos inválidos o incompletos.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "El cliente con cédula 123456789 no existe en el sistema."
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Error al procesar la venta."
                }
              }
            }
          }
        }
      }
    },
    "/api/venta/{id}": {
      "delete": {
        "tags": ["Ventas"],
        "description": "elimina una venta deacuerdo a su id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}
